{"version":3,"sources":["../js/complex.js"],"names":["setValues","parameters","_this","undefined","keys","Object","map","key","value","ShowBoard","options","THREE","Group","call","assign","length","height","width","boardColor","marginX","marginY","imageThickness","boardImg","init","prototype","create","constructor","board","Mesh","BoxGeometry","MeshPhongMaterial","color","castShadow","receiveShadow","add","TextureLoader","load","texture","imageMesh","PlaneGeometry","MeshBasicMaterial","position","z","Desk","desktopColor","desktopThickness","legThickness","legColor","deskTop","y","leg","legGeometryHorizontal","legGeometryVertical","legMaterial","legPiece1","legPiece2","legPiece3","clone","legPiece4","x","leg2","WorkBench","cabinetMarginSide","cabinetThickness","cabinetWidth","cabinetColor","cabinetDoorColor","handleLength","handleWidth","handleThickness","handleMarginHorizontal","handleMarginVertical","handleColor","desktop","cabinetMaterial","cabinetBack","cabinet1","cabinetLeft","cabinetRight","cabinetBottom","cabinetTop","cabinetDoor","cabinet2","handle1","handle2","Showcase","row","column","caseColor","caseThickness","meterLength","meterThickness","meterColor","casePieceMaterial","casePieceBack","casePieceLeft","casePieceRight","casePieceTop","meterAreaLength","meterAreaHeight","meterMarginHorizontal","meterMarginVertical","meter","r","c","meterCopy","Hint","text","font","fontSize","fontStyle","fontColor","strokeColor","strokeWidth","wordInOneLine","lineHeight","hintMargin","axis","timeout","marginBottom","scaleBasis","Math","ceil","visible","canvas","document","createElement","rows","ctx","getContext","fillStyle","strokeStyle","lineWidth","wrapText","Texture","needsUpdate","sprite","Sprite","SpriteMaterial","transparent","depthWrite","renderOrder","ratio","scale","set","bindTo","obj","Array","isArray","middleObj","fromArray","toArray","target","isObject3D","on","setTimeout","CanvasRenderingContext2D","maxWidth","context","parseInt","window","getComputedStyle","body","arrText","split","line","n","testLine","metrics","measureText","testWidth","fillText","strokeText","Computer","screenHeight","frameColor","image","imageColor","thickness","frameMaterial","screen","imageMaterial","displayImage","support","base"],"mappings":"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","sourcesContent":["\"use strict\"\r\n\r\nconst setValues = function (parameters) {\r\n    let _this = this\r\n    if (parameters === undefined) return\r\n    let keys = Object.keys(parameters)\r\n    keys.map(function (key) {\r\n        let value = parameters[key]\r\n        if (value !== undefined) {\r\n            _this[key] = value\r\n        }\r\n    })\r\n}\r\n\r\n// 复合体 - 展板\r\nconst ShowBoard = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        length: 30,\r\n        height: 12,\r\n        width: 1,\r\n        boardColor: 0x4f4f4f,\r\n        marginX: 1,\r\n        marginY: 0.5,\r\n        imageThickness: 0.05,\r\n        boardImg: 'img/showBoard/show_board_default.jpg'\r\n    }, options)\r\n    this.setValues(options)\r\n\r\n    this.init()\r\n}\r\nShowBoard.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: ShowBoard,\r\n    init() {\r\n        let _this = this\r\n        // 展板\r\n        let board = new THREE.Mesh(new THREE.BoxGeometry(this.length, this.height, this.width),\r\n            new THREE.MeshPhongMaterial({color: this.boardColor}))\r\n        board.castShadow = true\r\n        board.receiveShadow = true\r\n        this.add(board)\r\n\r\n        // 展图\r\n        this.boardImg === 'none' || new THREE.TextureLoader().load(this.boardImg, function (texture) {\r\n            let imageMesh = new THREE.Mesh(\r\n                new THREE.PlaneGeometry(_this.length - _this.marginX * 2, _this.height - _this.marginY * 2),\r\n                new THREE.MeshBasicMaterial({map: texture})\r\n            )\r\n            imageMesh.position.z += _this.width / 2 + _this.imageThickness\r\n            _this.add(imageMesh)\r\n        })\r\n    },\r\n    setValues\r\n})\r\n\r\n// 复合体 - 桌子\r\nconst Desk = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        length: 20,\r\n        width: 8,\r\n        height: 6,\r\n        desktopColor: 0xeeeeee,\r\n        desktopThickness: 1,\r\n        legThickness: 1,\r\n        legColor: 0x282c2d\r\n    }, options)\r\n    this.setValues(options)\r\n\r\n    this.init()\r\n}\r\nDesk.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: Desk,\r\n    init() {\r\n        // 桌面\r\n        let deskTop = new THREE.Mesh(new THREE.BoxGeometry(this.length, this.desktopThickness, this.width),\r\n            new THREE.MeshPhongMaterial({color: this.desktopColor}))\r\n        deskTop.castShadow = true\r\n        deskTop.receiveShadow = true\r\n        deskTop.position.y += (this.height - this.desktopThickness) / 2\r\n        this.add(deskTop)\r\n\r\n        // 桌腿\r\n        let leg = new THREE.Group()\r\n        let legGeometryHorizontal = new THREE.BoxGeometry(this.legThickness, this.legThickness, this.width - this.legThickness * 2)\r\n        let legGeometryVertical = new THREE.BoxGeometry(this.legThickness, this.height - this.desktopThickness, this.legThickness)\r\n        let legMaterial = new THREE.MeshPhongMaterial({color: this.legColor})\r\n        let legPiece1 = new THREE.Mesh(legGeometryHorizontal, legMaterial)\r\n        legPiece1.castShadow = true\r\n        legPiece1.receiveShadow = true\r\n        legPiece1.position.y += (this.height - this.desktopThickness - this.legThickness) / 2\r\n        leg.add(legPiece1)\r\n        let legPiece2 = new THREE.Mesh(legGeometryVertical, legMaterial)\r\n        legPiece2.castShadow = true\r\n        legPiece2.receiveShadow = true\r\n        legPiece2.position.z += (this.width - this.legThickness) / 2\r\n        leg.add(legPiece2)\r\n        let legPiece3 = legPiece1.clone()\r\n        legPiece3.position.y -= this.height - this.desktopThickness - this.legThickness\r\n        leg.add(legPiece3)\r\n        let legPiece4 = legPiece2.clone()\r\n        legPiece4.position.z -= this.width - this.legThickness\r\n        leg.add(legPiece4)\r\n        leg.position.x -= (this.length - this.legThickness) / 2\r\n        leg.position.y -= this.desktopThickness / 2\r\n        this.add(leg)\r\n        let leg2 = leg.clone()\r\n        leg2.position.x += this.length - this.legThickness\r\n        this.add(leg2)\r\n    },\r\n    setValues\r\n})\r\n\r\n// 复合体 - 实验台\r\nconst WorkBench = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        length: 28,\r\n        width: 8,\r\n        height: 10,\r\n        desktopColor: 0x282c2d,\r\n        desktopThickness: 1,\r\n        cabinetMarginSide: 1,\r\n        cabinetThickness: 1,\r\n        cabinetWidth: 6,\r\n        cabinetColor: 0xeeeeee,\r\n        cabinetDoorColor: 0x064f93,\r\n        handleLength: 1,\r\n        handleWidth: 0.5,\r\n        handleThickness: 0.5,\r\n        handleMarginHorizontal: 0.5,\r\n        handleMarginVertical: 1,\r\n        handleColor: 0x282c2d\r\n    }, options)\r\n    this.setValues(options)\r\n\r\n    this.init()\r\n}\r\nWorkBench.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: WorkBench,\r\n    init() {\r\n        let desktop = new THREE.Mesh(new THREE.BoxGeometry(this.length, this.desktopThickness, this.width),\r\n            new THREE.MeshPhongMaterial({color: this.desktopColor}))\r\n        desktop.castShadow = true\r\n        desktop.receiveShadow = true\r\n        desktop.position.y += (this.height - this.desktopThickness) / 2\r\n        this.add(desktop)\r\n\r\n        let cabinetMaterial = new THREE.MeshPhongMaterial({color: this.cabinetColor})\r\n        let cabinetBack = new THREE.Mesh(new THREE.BoxGeometry(this.length - this.cabinetMarginSide * 2, this.height - this.desktopThickness,\r\n            this.cabinetThickness), cabinetMaterial)\r\n        cabinetBack.castShadow = true\r\n        cabinetBack.receiveShadow = true\r\n        cabinetBack.position.y -= this.desktopThickness / 2\r\n        cabinetBack.position.z -= (this.width - this.cabinetMarginSide * 2 - this.cabinetThickness) / 2\r\n        this.add(cabinetBack)\r\n\r\n        let cabinet1 = new THREE.Group()\r\n        let cabinetLeft = new THREE.Mesh(new THREE.BoxGeometry(this.cabinetThickness, this.height - this.desktopThickness,\r\n            this.width - this.cabinetMarginSide * 2 - this.cabinetThickness), cabinetMaterial)\r\n        cabinetLeft.castShadow = true\r\n        cabinetLeft.receiveShadow = true\r\n        cabinetLeft.position.x -= (this.cabinetWidth - this.cabinetThickness) / 2\r\n        cabinet1.add(cabinetLeft)\r\n        let cabinetRight = cabinetLeft.clone()\r\n        cabinetRight.position.x += this.cabinetWidth - this.cabinetThickness\r\n        cabinet1.add(cabinetRight)\r\n        let cabinetBottom = new THREE.Mesh(new THREE.BoxGeometry(this.cabinetWidth - this.cabinetThickness * 2,\r\n            this.cabinetThickness, this.width - this.cabinetMarginSide * 2 - this.cabinetThickness), cabinetMaterial)\r\n        cabinetBottom.castShadow = true\r\n        cabinetBottom.receiveShadow = true\r\n        cabinetBottom.position.y -= (this.height - this.desktopThickness - this.cabinetThickness) / 2\r\n        cabinet1.add(cabinetBottom)\r\n        let cabinetTop = cabinetBottom.clone()\r\n        cabinetTop.position.y += this.height - this.desktopThickness - this.cabinetThickness\r\n        cabinet1.add(cabinetTop)\r\n        let cabinetDoor = new THREE.Mesh(new THREE.BoxGeometry(this.cabinetWidth - this.cabinetThickness * 2,\r\n            this.height - this.desktopThickness - this.cabinetThickness * 2, this.cabinetThickness),\r\n            new THREE.MeshPhongMaterial({color: this.cabinetDoorColor}))\r\n        cabinetDoor.castShadow = true\r\n        cabinetDoor.receiveShadow = true\r\n        cabinetDoor.position.z += this.width / 2 - this.cabinetMarginSide - this.cabinetThickness\r\n        cabinet1.add(cabinetDoor)\r\n        cabinet1.position.x -= (this.length - this.cabinetMarginSide * 2 - this.cabinetWidth) / 2\r\n        cabinet1.position.y -= this.desktopThickness / 2\r\n        cabinet1.position.z += this.cabinetThickness / 2\r\n        this.add(cabinet1)\r\n        let cabinet2 = cabinet1.clone()\r\n        cabinet2.position.x += this.length - this.cabinetMarginSide * 2 - this.cabinetWidth\r\n        this.add(cabinet2)\r\n\r\n        // 柜门把手\r\n        let handle1 = new THREE.Mesh(new THREE.BoxGeometry(this.handleWidth, this.handleLength, this.handleThickness),\r\n            new THREE.MeshPhongMaterial({color: this.handleColor}))\r\n        handle1.castShadow = true\r\n        handle1.receiveShadow = true\r\n        handle1.position.x -= this.length / 2 - this.cabinetMarginSide - this.cabinetWidth + this.cabinetThickness\r\n            + this.handleMarginHorizontal + this.handleWidth / 2\r\n        handle1.position.y += this.height / 2 - this.desktopThickness - this.cabinetThickness - this.handleMarginVertical - this.handleLength / 2\r\n        handle1.position.z += (this.width - this.cabinetMarginSide * 2 + this.handleThickness) / 2\r\n        this.add(handle1)\r\n        let handle2 = handle1.clone()\r\n        handle2.position.x += this.length + (this.cabinetThickness + this.handleMarginHorizontal - this.cabinetMarginSide\r\n            - this.cabinetWidth) * 2 + this.handleWidth\r\n        this.add(handle2)\r\n    },\r\n    setValues\r\n})\r\n\r\n// 复合体 - 展柜\r\nconst Showcase = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        length: 26,\r\n        width: 6,\r\n        height: 8,\r\n        row: 2,\r\n        column: 5,\r\n        caseColor: 0xeeeeee,\r\n        caseThickness: 1,\r\n        meterLength: 1,\r\n        meterThickness: 1,\r\n        meterColor: 0x63B8FF\r\n    }, options)\r\n    this.setValues(options)\r\n\r\n    this.init()\r\n}\r\nShowcase.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: Showcase,\r\n    init() {\r\n        // 展柜\r\n        let casePieceMaterial = new THREE.MeshPhongMaterial({color: this.caseColor})\r\n        let casePieceBack = new THREE.Mesh(new THREE.BoxGeometry(this.length, this.height, this.caseThickness), casePieceMaterial)\r\n        casePieceBack.castShadow = true\r\n        casePieceBack.receiveShadow = true\r\n        casePieceBack.position.z -= (this.width - this.caseThickness) / 2\r\n        this.add(casePieceBack)\r\n        let casePieceLeft = new THREE.Mesh(new THREE.BoxGeometry(this.caseThickness, this.height, this.width - this.caseThickness), casePieceMaterial)\r\n        casePieceLeft.castShadow = true\r\n        casePieceLeft.receiveShadow = true\r\n        casePieceLeft.position.x -= (this.length - this.caseThickness) / 2\r\n        casePieceLeft.position.z += this.caseThickness / 2\r\n        this.add(casePieceLeft)\r\n        let casePieceRight = casePieceLeft.clone()\r\n        casePieceRight.position.x += this.length - this.caseThickness\r\n        this.add(casePieceRight)\r\n        let casePieceTop = new THREE.Mesh(new THREE.BoxGeometry(this.length - this.caseThickness * 2, this.caseThickness,\r\n            this.width - this.caseThickness), casePieceMaterial)\r\n        casePieceTop.castShadow = true\r\n        casePieceTop.receiveShadow = true\r\n        casePieceTop.position.y += (this.height - this.caseThickness) / 2\r\n        casePieceTop.position.z += this.caseThickness / 2\r\n        this.add(casePieceTop)\r\n\r\n        // 电表\r\n        let meterAreaLength = this.length - this.caseThickness * 2\r\n        let meterAreaHeight = this.height - this.caseThickness\r\n        let meterMarginHorizontal = (meterAreaLength - this.column * this.meterLength) / this.column\r\n        let meterMarginVertical = (meterAreaHeight - this.row * this.meterLength) / this.row\r\n        let meter = new THREE.Mesh(new THREE.BoxGeometry(this.meterLength, this.meterLength, this.meterThickness),\r\n            new THREE.MeshPhongMaterial({color: this.meterColor}))\r\n        meter.castShadow = true\r\n        meter.receiveShadow = true\r\n        meter.position.x -= (this.length - meterMarginHorizontal - this.caseThickness * 2 - this.meterLength) / 2\r\n        meter.position.y += (this.height - meterMarginVertical - this.caseThickness * 2 - this.meterLength) / 2\r\n        meter.position.z -= (this.width - this.caseThickness * 2 - this.meterThickness) / 2\r\n        for (let r = 0; r < this.row; r++) {\r\n            for (let c = 0; c < this.column; c++) {\r\n                let meterCopy = meter.clone()\r\n                meterCopy.position.x += c * (meterMarginHorizontal + this.meterLength)\r\n                meterCopy.position.y -= r * (meterMarginVertical + this.meterLength)\r\n                this.add(meterCopy)\r\n            }\r\n        }\r\n    },\r\n    setValues\r\n})\r\n\r\n// 复合体 - 提示文字\r\nconst Hint = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        text: 'hello hint',\r\n        font: 'Microsoft YaHei',\r\n        fontSize: 48,\r\n        fontStyle: 'bold',\r\n        fontColor: '#ffffff',\r\n        strokeColor: '#ff4500',\r\n        strokeWidth: 2,\r\n        wordInOneLine: 5,\r\n        lineHeight: 48,\r\n        hintMargin: 3,\r\n        axis: 'y',\r\n        timeout: 3000\r\n    }, options)\r\n    options.marginBottom = options.fontSize / 4\r\n    options.scaleBasis = Math.ceil(options.text.length / options.wordInOneLine)\r\n    this.setValues(options)\r\n    this.visible = false\r\n\r\n    this.init()\r\n}\r\nHint.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: Hint,\r\n    init() {\r\n        let canvas = document.createElement('canvas')\r\n        let rows = Math.ceil(this.text.length / this.wordInOneLine)\r\n        canvas.width = this.fontSize * this.wordInOneLine\r\n        canvas.height = this.lineHeight * rows + this.marginBottom\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = this.fontColor\r\n        ctx.strokeStyle = this.strokeColor\r\n        ctx.font = this.fontStyle + ' ' + this.fontSize + 'px ' + this.font\r\n        ctx.lineWidth = this.strokeWidth\r\n        ctx.wrapText(this.text, 0, this.lineHeight, this.fontSize * this.wordInOneLine, this.lineHeight)\r\n        let texture = new THREE.Texture(canvas)\r\n        texture.needsUpdate = true\r\n\r\n        let sprite = new THREE.Sprite(new THREE.SpriteMaterial({map: texture, transparent: true, depthWrite: false}))\r\n        sprite.renderOrder = 1\r\n        let ratio = canvas.width / canvas.height\r\n        sprite.scale.set(this.scaleBasis * ratio, this.scaleBasis, 1)\r\n        this.add(sprite)\r\n    },\r\n    setValues,\r\n    bindTo(obj) {\r\n        // 终端点击动作\r\n        if (!Array.isArray(obj)) {\r\n            obj = [obj]\r\n        }\r\n        let middleObj = obj[obj.length / 2 | 0]\r\n\r\n        this.position.fromArray(middleObj.position.toArray())\r\n        this.position[this.axis] += this.hintMargin\r\n        let _this = this\r\n        obj.map((target) => {\r\n            if (target.isObject3D) {\r\n                target.on('click', () => {\r\n                    if (!_this.visible) {\r\n                        _this.visible = true\r\n                        setTimeout(() => {\r\n                            _this.visible = false\r\n                        }, _this.timeout)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n})\r\nCanvasRenderingContext2D.prototype.wrapText = function (text, x, y, maxWidth, lineHeight) {\r\n    if (typeof text != 'string' || typeof x != 'number' || typeof y != 'number') {\r\n        return\r\n    }\r\n\r\n    let context = this\r\n    let canvas = context.canvas\r\n\r\n    if (typeof maxWidth == 'undefined') {\r\n        maxWidth = (canvas && canvas.width) || 300\r\n    }\r\n    if (typeof lineHeight == 'undefined') {\r\n        lineHeight = (canvas && parseInt(window.getComputedStyle(canvas).lineHeight)) || parseInt(window.getComputedStyle(document.body).lineHeight)\r\n    }\r\n\r\n    // 字符分隔为数组\r\n    let arrText = text.split('')\r\n    let line = ''\r\n\r\n    for (let n = 0; n < arrText.length; n++) {\r\n        let testLine = line + arrText[n]\r\n        let metrics = context.measureText(testLine)\r\n        let testWidth = metrics.width\r\n        if (testWidth > maxWidth && n > 0) {\r\n            context.fillText(line, x, y)\r\n            context.strokeText(line, x, y)\r\n            line = arrText[n]\r\n            y += lineHeight\r\n        } else {\r\n            line = testLine\r\n        }\r\n    }\r\n    context.fillText(line, x, y)\r\n    context.strokeText(line, x, y)\r\n}\r\n\r\n// 复合体 - 电脑\r\nconst Computer = function (options = {}) {\r\n    THREE.Group.call(this)\r\n\r\n    options = Object.assign({\r\n        length: 5,\r\n        width: 1.5,\r\n        height: 4,\r\n        screenHeight: 3,\r\n        marginX: 0.2,\r\n        marginY: 0.2,\r\n        frameColor: 0x696969,\r\n        image: 'none',\r\n        imageColor: 0xcfcfcf,\r\n        imageThickness: 0.05\r\n    }, {...options, thickness: options.width / 3})\r\n    this.setValues(options)\r\n\r\n    this.init()\r\n}\r\nComputer.prototype = Object.assign(Object.create(THREE.Group.prototype), {\r\n    constructor: Computer,\r\n    init() {\r\n        let frameMaterial = new THREE.MeshPhongMaterial({color: this.frameColor})\r\n        // 屏幕\r\n        let screen = new THREE.Mesh(new THREE.BoxGeometry(this.length, this.screenHeight, this.thickness),\r\n            frameMaterial)\r\n        screen.castShadow = true\r\n        screen.receiveShadow = true\r\n        screen.position.y += (this.height - this.screenHeight) / 2\r\n        screen.position.z += (this.width - this.thickness) / 2\r\n        this.add(screen)\r\n\r\n        // 显示图像\r\n        let imageMaterial\r\n        if (this.image === 'none') {\r\n            imageMaterial = new THREE.MeshBasicMaterial({color: this.imageColor})\r\n        } else {\r\n            let texture = new THREE.TextureLoader().load(this.image)\r\n            imageMaterial = new THREE.MeshBasicMaterial({map: texture})\r\n        }\r\n        let displayImage = new THREE.Mesh(new THREE.PlaneGeometry(this.length - this.marginX * 2,\r\n            this.screenHeight - this.marginY * 2), imageMaterial)\r\n        displayImage.position.y += (this.height - this.screenHeight) / 2\r\n        displayImage.position.z += this.width / 2 + this.imageThickness\r\n        this.add(displayImage)\r\n\r\n        // 支柱\r\n        let support = new THREE.Mesh(new THREE.BoxGeometry(this.thickness, this.height / 2, this.thickness),\r\n            frameMaterial)\r\n        support.castShadow = true\r\n        support.receiveShadow = true\r\n        support.position.y += this.thickness - this.height / 4\r\n        this.add(support)\r\n\r\n        // 底座\r\n        let base = new THREE.Mesh(new THREE.BoxGeometry(this.thickness * 3, this.thickness, this.thickness * 3),\r\n            frameMaterial)\r\n        base.castShadow = true\r\n        base.receiveShadow = true\r\n        base.position.y += (this.thickness - this.height) / 2\r\n        this.add(base)\r\n    },\r\n    setValues\r\n})"],"file":"complex.js"}